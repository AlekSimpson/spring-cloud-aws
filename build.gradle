/*
 * Copyright [2011] [Agim Emruli]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configure(allprojects) {
    apply plugin: 'maven'
    apply plugin: 'java'

    group = 'org.elasticspring'
    version = '0.1'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    [compileJava, compileTestJava]*.options*.compilerArgs = ['-Xlint:none']

    test.systemProperty("java.awt.headless", "true")

    repositories {
        mavenCentral()
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "file://localhost/tmp/myRepo/")
            }
        }
    }
}

configure(subprojects) {


    javadoc {
        options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
        options.author = true
        options.header = project.name
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    dependencies {
        compile('org.slf4j:slf4j-api:1.6.1')
        compile('org.slf4j:jcl-over-slf4j:1.6.1')
        compile('ch.qos.logback:logback-classic:0.9.27')
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

project('elasticspring-core') {
    description = 'elasticspring core'
    dependencies {
        compile('org.springframework:spring-core:3.1.0.RELEASE') {
            exclude module: 'commons-logging'
        }
        compile('org.springframework:spring-beans:3.1.0.RELEASE') {
            exclude module: 'commons-logging'
        }
        compile('com.amazonaws:aws-java-sdk:1.3.7') {
            exclude module: 'commons-logging'
            exclude module: 'stax-api'
            exclude module: 'activation'
        }
        testCompile('junit:junit:4.8.2')
        testCompile('org.springframework:spring-test:3.1.0.RELEASE')
        testCompile('org.springframework:spring-context:3.1.0.RELEASE')
        testCompile('org.mockito:mockito-all:1.8.5')
    }
}


project('elasticspring-context') {
    description = 'elasticspring context'
    dependencies {
        compile project(":elasticspring-core")
        compile('org.springframework:spring-context:3.1.0.RELEASE') {
            exclude module: 'commons-logging'
        }
        compile('org.springframework:spring-context-support:3.1.0.RELEASE')
        compile('javax.mail:mailapi:1.4.3') {
            exclude module: 'activation'
        }
        testCompile('junit:junit:4.8.2')
        testCompile('org.springframework:spring-test:3.1.0.RELEASE')
        testCompile('org.mockito:mockito-all:1.8.5')
    }
}

project('elasticspring-jdbc') {
    description = 'elasticspring jdbc'
    dependencies {
        compile project(":elasticspring-context")
        compile('org.springframework:spring-jdbc:3.1.0.RELEASE')
        compile('mysql:mysql-connector-java:5.1.16')
        compile('commons-dbcp:commons-dbcp:1.4')
        testCompile('junit:junit:4.8.2')
        testCompile('org.springframework:spring-test:3.1.0.RELEASE')
        testCompile('org.mockito:mockito-all:1.8.5')
    }
}


project('elasticspring-messaging') {
    description = 'elasticspring messaging'
    dependencies {
        compile project(":elasticspring-context")
        compile('org.springframework:spring-oxm:3.1.0.RELEASE')
        compile('com.thoughtworks.xstream:xstream:1.4.2') {
            exclude module: 'xpp3_min'
        }
        compile('org.codehaus.jettison:jettison:1.3.1') {
            exclude module: 'stax-api'
        }
        testCompile('junit:junit:4.8.2')
        testCompile('org.springframework:spring-test:3.1.0.RELEASE')
        testCompile('org.mockito:mockito-all:1.8.5')
    }
}


configure(rootProject) {
    description = 'Elastic Spring'

    // don't publish the default jar for the root project
    configurations.archives.artifacts.clear()


    task wrapper(type: Wrapper) {
        description = 'Generates gradlew[.bat] scripts'
        gradleVersion = '1.0-rc-1'
        distributionUrl = 'http://repo.gradle.org/gradle/distributions-snapshots/gradle-1.0-rc-1-20110729000012+0200-all.zip'
        jarFile = '.wrapper/gradle-wrapper.jar'
    }
}


